---
###########################
###########################
## Linter GitHub Actions ##
###########################
###########################
name: Lint Code Base
# Variant slim - see: https://github.com/super-linter/super-linter?tab=readme-ov-file#super-linter-variants

#
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
#

#############################
# Start the job on all push #
#############################
on:
  push:
    branches-ignore:
      # notest branches to ignore testing of partial online commits
      - "notest/**"
  pull_request:
    branches-ignore:
      # notest branches to ignore testing of partial online commits
      - "notest/**"
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        default: "ubuntu-latest"

permissions:
  contents: read

###############
# Set the Job #
###############
jobs:
  build:
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: "${{ inputs.runs-on || 'ubuntu-latest' }}"
    # Limit the running time
    timeout-minutes: 10

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0 # Fetch all history for all branches and tags. Otherwise github.event.pull_request.base.ref SHA isn't found.          
          persist-credentials: false # safer: token not left in git config
      # Fetch latest changes (even by previous job)
      - name: Fetch latest changes
        if: ${{ !startsWith(github.ref, 'refs/pull/') }}
        run: git pull --ff-only origin "$GITHUB_REF"
        shell: bash
        env:
          GITHUB_REF: ${{ github.ref }}
          #  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Dump the GitHub variables
      - name: Dump GitHub Variables
        run: |
          echo "GitHub Event Name: ${{ github.event_name }}"
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_EVENT_PULL_REQUEST_BASE_REF: ${{ github.event.pull_request.base.ref }}
          GITHUB_EVENT_PULL_REQUEST_BASE_NAME: ${{ github.event.pull_request.base.name }}
        shell: bash

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        # pinned to a hash (required by blanket policy)
        uses: super-linter/super-linter/slim@ffde3b2b33b745cb612d787f669ef9442b1339a6 # v8.1.0
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref || github.ref_name }}
          FILTER_REGEX_EXCLUDE: '.*\/vendor\/.*'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.yml
          #SHELL_SHFMT_FILE_NAME: .shfmt
          VALIDATE_ANSIBLE: false
          # TODO 211003 returns false positive: {"line":"                    <li><a href=\"https://www.linkedin.com/company/MYCMSPROJECTSPECIFIC\" title=\"{=\"MYCMSPROJECTSPECIFIC na LinkedIn\"|translate}\"><i class=\"fa fa-linkedin\" aria-hidden=\"true\"></i></a></li>","lineNumber":56,"offender":"linkedin.com/company/MYCMSPROJECTSPECIFIC","offenderEntropy":-1,"commit":"","repo":"","repoURL":"","leakURL":"","rule":"LinkedIn Secret Key","commitMessage":"","author":"","email":"","file":".","date":"0001-01-01T00:00:00Z","tags":"secret, LinkedIn"}
          VALIDATE_GITLEAKS: false
          # TODO VALIDATE_JSCPD later
          VALIDATE_JSCPD: false
          # PHPStan run in matrix strategy in php-composer-dependencies-reusable.yml
          VALIDATE_PHP_PHPSTAN: false
          VALIDATE_PHP_PSALM: false
          # 240519 .shfmt is not taken into account, so far
          VALIDATE_SHELL_SHFMT: false
